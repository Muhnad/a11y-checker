"use strict";const a=()=>{const a=a=>console.warn(a),b=a=>document.querySelectorAll(a);(()=>{const b=document.doctype;if(b){const c=b.name;"html"!==c.toLowerCase()&&a("Should add doctype to document!")}else a("Should add doctype to document!")})(),(()=>{const c=b("html")[0];if(c)if(c.hasAttribute("lang")){const b=c.getAttribute("lang");null!==b&&""!==b||a("Should add lang=value attribute to html element!")}else a("Should add lang attribute to html element!")})(),(()=>{const c=b("meta")[0];c?c.hasAttribute("charset")||a("Should add meta charset=utf-8 to document!"):a("Should add meta charset=utf-8 to document!")})(),(()=>{const b=document.title;null!==b&&""!==b||a("Should add title to describe the page content!")})(),(()=>{const c=b("link");for(let d=0;d<c.length;d++){const b=c[d].getAttribute("rel");if("stylesheet"===b)if(c[d].hasAttribute("media")>=0){const b=c[d].getAttribute("media");"print"!==b&&a("Should add print style file to document.")}else a("Should add print style file to document.")}})(),(()=>{const c=b("h1"),d=c.length;d>1&&a("Should h1 exist in page once usually in logo!")})(),(()=>{const c=[...b("h1, h2, h3, h4, h5, h6")],d=c.map(a=>a.nodeName),e=c.filter((a,b)=>d.indexOf(a.nodeName)===b),f=e.length;f>=1&&"H1"!==e[0].nodeName&&a("Should heading start with H1:h6"),f>=2&&"H2"!==e[1].nodeName&&a("Should using H2 after H1 not any heading else."),f>=3&&"H3"!==e[2].nodeName&&a("Should using H3 after H2 not any heading else."),f>=4&&"H4"!==e[3].nodeName&&a("Should using H4 after H3 not any heading else."),f>=5&&"H5"!==e[4].nodeName&&a("Should using H5 after H4 not any heading else.")})(),(()=>{const c=b("img");for(let d=0;d<c.length;d++)if(c[d].hasAttribute("src")){const b=c[d].getAttribute("src");null!==b&&""!==b||a(`Should add src=value to the image.
code: ${c[d].outerHTML}`),c[d].hasAttribute("alt")||a(`Should add alt to the image.
code: ${c[d].outerHTML}`)}else a(`Should add src to the image.
code: ${c[d].outerHTML}`)})(),(()=>{const c=b("a"),d=c[0],e=["skip navigation","skip nav","skip to navigation","skip main navigation","skip to content","skip to main content","skip to search","skip to sidebar"];if(d){const b=d.textContent.toLowerCase();e.indexOf(b)<0&&a("Should add skip to main content link!")}for(let f=0;f<c.length;f++){const b=c[f].textContent.toLowerCase(),d=c[f].getAttribute("href"),e=["more","click","click here","continue","go","here","open link","open"];if(null!==d&&""!==d||a(`Should add href=value to anchor tag.
code: ${c[f].outerHTML}`),e.indexOf(b)>=0&&a(`Should link have a meaningful text to explain where the link goes!
code: ${c[f].outerHTML}`),c[f].hasAttribute("target")){const b=c[f].getAttribute("target");if("_blank"===b)if(c[f].hasAttribute("aria-describedby")||a(`Should add alert to recognize this link will open in new tab.
code: ${c[f].outerHTML}`),c[f].hasAttribute("rel")){const b=c[f].getAttribute("rel");"noopener"!==b&&a(`Should add rel=noopener to 
code:${c[f].outerHTML}`)}else a(`Should add rel=noopener to
code: ${c[f].outerHTML}`)}}})(),(()=>{const c=b("header")[0];if(c)if(c.hasAttribute("role")){const b=c.getAttribute("role");"banner"!==b&&a("Should add role=banner to header!")}else a("Should add role=banner to header!")})(),(()=>{const c=b("nav");for(let d=0;d<c.length;d++){if(c[d].hasAttribute("role")){const b=c[d].getAttribute("role");"navigation"!==b&&a(` Should add role=navigation to nav id: ${c[d].id} & class: ${c[d].className}`)}else a(` Should add role=navigation to nav id: ${c[d].id} & class: ${c[d].className}`);c[d].hasAttribute("aria-label")||a(`Should add aria-label to nav id: ${c[d].id} & class: ${c[d].className}`)}})(),(()=>{const c=b("main")[0];if(c)if(c.hasAttribute("role")){const b=c.getAttribute("role");"main"!==b&&a("Should add role=main to main!")}else a("Should add role=main to main!")})(),(()=>{const c=b("footer")[0];if(c)if(c.hasAttribute("role")){const b=c.getAttribute("role");"contentinfo"!==b&&a("Should add role=contentinfo to footer!")}else a("Should add role=contentinfo to footer!")})(),(()=>{const c=b("section");for(let d=0;d<c.length;d++){if(c[d].hasAttribute("role")){const b=c[d].getAttribute("role");"region"!==b&&a(`Should add role=region to section id: ${c[d].id} & class: ${c[d].className}`)}else a(`Should add role=region to section id: ${c[d].id} & class: ${c[d].className}`);c[d].hasAttribute("aria-labelledby")||a(`Should add aria-labelledby to section id: ${c[d].id} & class: ${c[d].className}`)}})(),(()=>{const c=b("article");for(let d=0;d<c.length;d++)if(c[d].hasAttribute("role")){const b=c[d].getAttribute("role");"article"!==b&&a(`Should add role=article to article id: ${c[d].id} & class: ${c[d].className}`)}else a(`Should add role=article to article id: ${c[d].id} & class: ${c[d].className}`)})(),(()=>{const c=b("aside");for(let d=0;d<c.length;d++){if(c[d].hasAttribute("role")){const b=c[d].getAttribute("role");"complementary"!==b&&a(`Should add role=complementary to aside id: ${c[d].id} & class: ${c[d].className}`)}else a(`Should add role=complementary to aside id: ${c[d].id} & class: ${c[d].className}`);c[d].hasAttribute("aria-labelledby")||a(`Should add aria-labelledby to aside id: ${c[d].id} & class: ${c[d].className}`)}})(),(()=>{const c=b("figure");for(let d=0;d<c.length;d++){if(c[d].hasAttribute("role")){const b=c[d].getAttribute("role");"group"!==b&&a(`Should add role=group to figure id: ${c[d].id} & class: ${c[d].className}`)}else a(`Should add role=group to figure id: ${c[d].id} & class: ${c[d].className}`);c[d].hasAttribute("aria-labelledby")||a(`Should add aria-labelledby to figure id: ${c[d].id} & class: ${c[d].className}`)}})(),(()=>{const b=document.forms;for(let c=0;c<b.length;c++){if(b[c].hasAttribute("role")){const d=b[c].getAttribute("role");"form"!==d&&"search"!==d&&a(`Should add role=form OR role=search
code: ${b[c].outerHTML}`)}else a(`Should add role=form OR role=search
code: ${b[c].outerHTML}`);b[c].hasAttribute("aria-labelledby")||a(`Should add aria-labelledby to form
code: ${b[c].outerHTML}`)}})(),(()=>{const c=b("label");for(let d=0;d<c.length;d++){const b=c[d].children.length;if(0===b||b>=2)if(c[d].hasAttribute("for")){const b=c[d].getAttribute("for");null!==b&&""!==b||a(`Should add for=value to label: ${c[d].outerHTML}`)}else a(`Should add for=value to label: ${c[d].outerHTML}`)}})(),(()=>{const c=b("input");for(let d=0;d<c.length;d++){if(c[d].hasAttribute("type")){const b=c[d].getAttribute("type");"submit"!==b&&"reset"!==b||c[d].hasAttribute("value")||a(`Should Add value=value to input
code: ${c[d].outerHTML}`)}else a(`Should Add type=value to input
code: ${c[d].outerHTML}`);c[d].hasAttribute("placeholder")&&(c[d].hasAttribute("aria-label")||a(`the placeholder is not guaranteed to be read by assisitive technowarnies, should include aria-label OR label for element.
code: ${c[d].outerHTML}`))}})(),(()=>{const c=b("iframe");for(let d=0;d<c.length;d++)if(c[d].hasAttribute("src")){const b=c[d].getAttribute("src");if(null!==b&&""!==b||a(`Should add src=value to iframe
code: ${c[d].outerHTML}`),c[d].hasAttribute("title")){const b=c[d].getAttribute("title");null!==b&&""!==b||a(`Should add title=value to iframe
code: ${c[d].outerHTML}`)}else a(`Should add title to iframe
code: ${c[d].outerHTML}`)}else a(`Should add src to iframe
code: ${c[d].outerHTML}`)})(),(()=>{const c=b("button");for(let d=0;d<c.length;d++){const b=c[d].textContent;null!==b&&""!==b||a(`Should add text to button
code: ${c[d].outerHTML}`)}})(),(()=>{const c=b("abbr");for(let d=0;d<c.length;d++)if(c[d].hasAttribute("title")){const b=c[d].getAttribute("title");null!==b&&""!==b||a(`Should add title=value to abbr 
code: ${c[d].outerHTML}`)}else a(`Should add title to abbr 
code: ${c[d].outerHTML}`)})(),(()=>{const c=b("optgroup");for(let d=0;d<c.length;d++)if(c[d].hasAttribute("label")){const b=c[d].getAttribute("label");null!==b&&""!==b||a(`Should add label=value to optgroup
code: ${c[d].outerHTML}`)}else a(`Should add label to optgroup
code: ${c[d].outerHTML}`)})(),(()=>{const c=b("*");for(let d=0;d<c.length;d++)if(c[d].hasAttribute("tabindex")){const b=c[d].getAttribute("tabindex");b>=1&&a(`Avoid using positive integer values for tabindex
code: ${c[d].outerHTML}`)}})(),(()=>{const c=b("*");for(let d=0;d<c.length;d++)(c[d].hasAttribute("onclick")||c[d].hasAttribute("onClick"))&&(c[d].hasAttribute("tabindex")||a(`Please add tabindex to element id: ${c[d].id} & class: ${c[d].className}`))})(),(()=>{const c=[...b("*")],d=c.map(a=>a.getAttribute("id")),e=d.sort(),f=[];for(let g=0;g<d.length-1;g++)e[g+1]===e[g]&&f.push(e[g]);const h=f.filter(a=>null!==a),i=h.length;i>=1&&a(`Should ID be unique. 
duplicate id: ${h}`)})()};window.addEventListener("load",a);
