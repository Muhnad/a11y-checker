const a=function(){"use strict";(function(){const a=document.getElementsByTagName("html")[0];if(a)if(a.hasAttribute("lang")){const b=a.getAttribute("lang");null!==b&&""!==b||console.log(`⚠️ Should add lang attribute to html element!`)}else console.log(`⚠️ Should add lang attribute to html element!`)})(),function(){const a=document.title;null!==a&&""!==a||console.log(`⚠️ Should add title to describe the page content!`)}(),function(){const a=document.getElementsByTagName("link");for(let b=0;b<a.length;b++)if(a[b].hasAttribute("media")>=0){const c=a[b].getAttribute("media");"print"!==c&&console.log(`⚠️ Should add print style file to document.`)}else console.log(`⚠️ Should add print style file to document.`)}(),function(){const a=document.getElementsByTagName("img");for(let b=0;b<a.length;b++)a[b].hasAttribute("alt")||console.log(`⚠️ Should add alt to the image src:  ${a[b].src}`)}(),function(){const a=document.getElementsByTagName("a");for(let b=0;b<a.length;b++){const c=a[b].getAttribute("href");null!==c&&""!==c||console.log(`⚠️ Should add href=value to anchor tag id: ${a[b].id} & class: ${a[b].className}`)}}(),function(){const a=document.getElementsByTagName("header")[0];if(a)if(a.hasAttribute("role")){const b=a.getAttribute("role");"banner"!==b&&console.log(`⚠️ Should add role=banner to header!`)}else console.log(`⚠️ Should add role=banner to header!`)}(),function(){const a=document.getElementsByTagName("nav");for(let b=0;b<a.length;b++)if(a[b].hasAttribute("role")){const c=a[b].getAttribute("role");"navigation"!==c&&console.log(`⚠️ Should add role=navigation to nav id: ${a[b].id} & class: ${a[b].className}`)}else console.log(`⚠️ Should add role=navigation to nav id: ${a[b].id} & class: ${a[b].className}`)}(),function(){const a=document.getElementsByTagName("main")[0];if(a)if(a.hasAttribute("role")){const b=a.getAttribute("role");"main"!==b&&console.log(`⚠️ Should add role=main to main!`)}else console.log(`⚠️ Should add role=main to main!`)}(),function(){const a=document.getElementsByTagName("footer")[0];if(a)if(a.hasAttribute("role")){const b=a.getAttribute("role");"contentinfo"!==b&&console.log(`⚠️ Should add role=contentinfo to footer!`)}else console.log(`⚠️ Should add role=contentinfo to footer!`)}(),function(){const a=document.getElementsByTagName("section");for(let b=0;b<a.length;b++){if(a[b].hasAttribute("role")){const c=a[b].getAttribute("role");"region"!==c&&console.log(`⚠️ Should add role=region to section id: ${a[b].id} & class: ${a[b].className}`)}else console.log(`⚠️ Should add role=region to section id: ${a[b].id} & class: ${a[b].className}`);a[b].hasAttribute("aria-labelledby")||console.log(`⚠️ Should add aria-labelledby to section id: ${a[b].id} & class: ${a[b].className}`)}}(),function(){const a=document.getElementsByTagName("article");for(let b=0;b<a.length;b++)if(a[b].hasAttribute("role")){const c=a[b].getAttribute("role");"article"!==c&&console.log(`⚠️ Should add role=article to article id: ${a[b].id} & class: ${a[b].className}`)}else console.log(`⚠️ Should add role=article to article id: ${a[b].id} & class: ${a[b].className}`)}(),function(){const a=document.getElementsByTagName("aside");for(let b=0;b<a.length;b++){if(a[b].hasAttribute("role")){const c=a[b].getAttribute("role");"complementary"!==c&&console.log(`⚠️ Should add role=complementary to aside id: ${a[b].id} & class: ${a[b].className}`)}else console.log(`⚠️ Should add role=complementary to aside id: ${a[b].id} & class: ${a[b].className}`);a[b].hasAttribute("aria-labelledby")||console.log(`⚠️ Should add aria-labelledby to aside id: ${a[b].id} & class: ${a[b].className}`)}}(),function(){const a=document.forms;for(let b=0;b<a.length;b++){if(a[b].hasAttribute("role")){const c=a[b].getAttribute("role");"form"!==c&&"search"!==c&&console.log(`⚠️ Should add role=form OR role=search to form id: ${a[b].id} & class: ${a[b].className}`)}else console.log(`⚠️ Should add role=form OR role=search to form id: ${a[b].id} & class: ${a[b].className}`);a[b].hasAttribute("aria-labelledby")||console.log(`⚠️ Should add aria-labelledby to form id: ${a[b].id} & class: ${a[b].className}`)}}(),function(){const a=document.getElementsByTagName("label");for(let b=0;b<a.length;b++){const c=a[b].children.length;if(0===c||c>=2)if(a[b].hasAttribute("for")){const c=a[b].getAttribute("for");null!==c&&""!==c||console.log(`⚠️ Should add for=value to label: ${a[b].innerHTML}`)}else console.log(`⚠️ Should add for=value to label: ${a[b].innerHTML}`)}}(),function(){const a=document.getElementsByTagName("input");for(let b=0;b<a.length;b++)a[b].hasAttribute("placeholder")&&console.log(`⚠️ the placeholder is not guaranteed to be read by assisitive technologies, should include aria-label OR label for element. 
 placeholder: ${a[b].placeholder} & id: ${a[b].id}`)}(),function(){const a=document.querySelectorAll("*");for(let b=0;b<a.length;b++)if(a[b].hasAttribute("tabindex")){const c=a[b].getAttribute("tabindex");c>=1&&console.log(`⚠️ Avoid using positive integer values for tabindex id: ${a[b].id} & class: ${a[b].className}`)}}()};window.onload=a();